<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chest</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parent_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
image_speed = 0;
open = false;
z = 0;

homing_target = 0;
payed = 0;
newcost = 0;
width = 2;
height = 2;
box_size = 16;
points = 0;
glow_size = 100;

resources[res.fish] = 30;
resources[res.wood] = 30;
resources[res.stone] = 30;
resources[res.crystal] = 30;
resources[res.token] = 0; //When purchasing uppgrades
resources[5] = 0; // spare

var henchList;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Palette

//Creating an unique palette for drawing
//Creating a palette for currenlty used sprite
palette_index = pal_palette_create(sprite_index);
//Chaning used palette to random one
//If you set argument to true - palettes will also be merged between each other
pal_palette_random( false );
alarm[11] = 2;

//When drawing, palette_index must be used instead of image_blend
//Setting it right here so I don't have to add Draw event
image_blend = palette_index;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///team color &amp; set_default_hench_places
pal_palette_slot( team, spr_chest_pal )

var h_size = ds_list_size(henchList);
for(var i = 0; i &lt; h_size; i++){
    
    var cur = henchList[| i];
    cur.default_x = x+lengthdir_x(30+h_size,i*(360/h_size)+90)
    cur.default_y = y-4+lengthdir_y(30+h_size,i*(360/h_size)+90)*perspective
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Close chest
image_index = 0;
open = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;

if(distance_to_point(owner.x,owner.y )&lt; 16 &amp;&amp; owner.ObjectID != id){
    open = true;
    image_index = 1;
    alarm[0] = 10;
}

if(payed){
    for(var i = 0; i&lt;5; i++){ //5 -&gt; paying coin to player
        for(var j = 0; j&lt;newcost[i]; j++){
            pay = instance_create(x+irandom(16)-8,y-6,homing_item);
            pay.target = homing_target;
            pay.sprite_index = spr_Items;
            pay.image_speed = 0;
            pay.image_index = i;
            //pay.points = i+1;
            switch(i){
                case 0:
                    pay.points = 1;
                    break;
                case 1:
                case 2:
                    pay.points = 2;
                    break;
                case 3:
                    pay.points = 3;
                    break;
                case 4:
                    pay.points = 5;
                    break;
            }
        }
    }
    homing_target = 0;
    payed = 0;
    alarm[0] = 60;
    image_index = 1;
}

glow_size += choose(0,0.1,-0.1);
glow_size = clamp(glow_size,88,90);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(henchList);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y-z,image_xscale,image_yscale,image_angle,image_blend,image_alpha);




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite_ext(sprite_index,image_index,x,y+sprite_yoffset*1.5*image_yscale,-image_xscale,image_yscale*0.5,180,c_black,0.2*image_alpha);

if (open){
    var i = 0;
    for(var yy = 0; yy &lt; height; yy++){
        for(var xx = 0; xx &lt; width; xx++){
            var tx = x+(xx*box_size)-8-view_xview[0];
            var ty = y+(yy*box_size)-48-view_yview[0];
            
            if(resources[i] &gt; 0){
                draw_sprite(spr_Items, i, tx, ty);
                if(resources[i] != 1){
                    draw_set_font(fnt_text);
                    draw_set_colour(c_black);
                    draw_text(tx, ty+1, resources[i]);
                    draw_set_colour(c_white);
                    draw_text(tx, ty, resources[i]);
                }
            }
            i++;
        }
    }
}
/*
if(resources[res.fish] &gt; 0) {
    for(var yy = 1; yy &lt;= resources[res.fish]; yy++){
        draw_sprite_ext(spr_Items,res.fish,x-24,y-yy*5,1/sqrt(yy),1/sqrt(yy),yy*37,c_white,1)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y+sprite_yoffset*.4+z,-image_xscale,0.5,180,c_black,0.2*image_alpha);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,14</point>
    <point>22,14</point>
    <point>22,22</point>
    <point>4,22</point>
  </PhysicsShapePoints>
</object>
