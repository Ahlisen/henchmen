<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_trader</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other_ = noone;
thisday = 0;
used = 0;
image_speed = 0;
width = 2;
height = 2;
box_size = 16;
items = 4;
var odds = 2;
depth = -y+8;
points = 0;
type = 0;
max_charges = 2;
charges = max_charges;

//Fisherman
rewardslot = res.fish;
costslot = res.crystal;
reward_amount = 2;
cost_amount = 1;

/* //Random trader
rewardslot = irandom(items-1);
costslot = irandom(items-1);
reward_amount = irandom(1)+1;
cost_amount = irandom(2)+1;
*/

//Set all items to zero cost
cost[items] = 0;
reward[items] = 0;

cost[costslot] = cost_amount;
reward[rewardslot] = reward_amount;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!used){
    var nearest = instance_nearest(x,y,player)
    if (distance_to_point(nearest.x,nearest.y)&lt;16){
        image_index = 1;
    }
    else{
        image_index = 0;
    }
}

other_ = instance_place(x,y,parent_damage);

if (other_ != noone &amp;&amp; object_get_name(other_.owner.object_index) == "player"){
    if (!used){
    
        var canpay = 0;
        
        for(var i=0; i&lt;items; i++){
            if (other_.owner.myDropoff.resources[i] &gt;= cost[i]){
                canpay++;
            }
        }
        
        if(canpay &gt;= 4){
            for(var j=0; j&lt;items; j++){
                other_.owner.myDropoff.resources[j] -= cost[j];
            }
            other_.owner.myDropoff.newcost = cost;
            other_.owner.myDropoff.payed = 1;
            other_.owner.myDropoff.homing_target = id;
            other_.owner.myDropoff.resources[rewardslot] += reward_amount;
            
            //send reward
            repeat(reward_amount) {
                pay = instance_create(x,y-6,homing_item);
                pay.target = other_.owner.myDropoff;
                pay.sprite_index = spr_Items;
                pay.image_index = rewardslot;
            }
            
            if(charges &lt;= 1){
                used = true;
                charges = 0;
                image_index = 2;
            } else {
                charges--;
            }
            scr_effect(spr_Glimmer);
        } else {
            scr_effect(spr_Block);
        }
        other_.hit = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 1){
    var i = 0;
    var tx = x-view_xview[0];
    var ty = y+(box_size)-48-view_yview[0];
    
    draw_sprite(spr_Items, costslot, tx-16, ty);
    draw_set_colour(c_black);
    draw_text(tx-16, ty, cost_amount);
    draw_set_colour(c_white);
    draw_text(tx-16, ty-1, cost_amount);
    
    //Draw_arrow in between
    draw_sprite(spr_arrow,0, tx, ty)
    
    draw_sprite(spr_Items, rewardslot, tx+16, ty);
    draw_set_colour(c_black);
    draw_text(tx+16, ty, reward_amount);
    draw_set_colour(c_white);
    draw_text(tx+16, ty-1, reward_amount);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y);
draw_sprite_ext(spr_fisherman,type,x-28,y,-1,1,0,c_white,1);




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
