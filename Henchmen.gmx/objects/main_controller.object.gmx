<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_overlay(true)
randomize();

display_set_gui_size(display_get_width() / 2, display_get_height() / 2);
display_set_gui_maximise(2, 2, 0, 0);

physics_world_gravity(0,0);

/*
var gp_num = gamepad_get_device_count();
for (var i = 0; i &lt; gp_num; i++;){
   if gamepad_is_connected(i) global.gp[i] = true else global.gp[i] = false;
}
*/
endgame = false;

rx = room_width div 2;
ry = room_height div 2;

instance_create(x,y,night_controller);

var view = instance_create(x,y,obj_view);

players = settings.gamepads_connected;
players_ready = 0;

for (var j = 0; j&lt;players; j++){
    
    var pos_x = rx/2 + (1+j)*(rx/(players+1))

    var play = instance_create(pos_x,ry-48,player);
    play.team = j;
    
    if(!view.owner){
        view.owner = play.id;
    }
    
    var drop = instance_create(pos_x,ry,dropoff);
    drop.team = j;
    drop.owner = play.id;
    drop.henchList = ds_list_create();
    play.myDropoff = drop.id;
    drop.phy_active = false;
    play.ObjectID = drop;
/*
    for (var i = 0; i &lt; 3; i++){
       hench = instance_create(pos_x+(i*32)-32,ry+32,henchman);
       hench.team = j;
       hench.current_pal = j;
       hench.myChestID = drop.id;
       hench.owner = play.id;
       ds_list_add(drop.henchList, hench.id);
    }
    */
}

/*
for (var j = 0; j &lt; 2; j += 1){
   src = instance_create(rx-50+j*100,50,source);
   src.type = j+1;
}
*/


var gridsize = 16;
var gridx = room_width/gridsize;
var gridy = room_height/gridsize;

for (var j = 0; j &lt; 3; j += 1){
   var upg = instance_create(rx-100+j*100,room_height-40,upgrade);
   //var upg = instance_create(64+irandom(gridx-4)*gridsize,64+irandom(gridy-4)*gridsize,upgrade);
   upg.type = j;
}

repeat(50){
    instance_create(irandom(gridx)*gridsize,irandom(gridy)*gridsize,obj_grass);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (keyboard_check_released(vk_escape)){
    //part_system_destroy(global.P_system);
    game_end();
}*/

if (keyboard_check_released(vk_escape)){
    //part_system_destroy(global.P_system);
    //if(endgame) {
        //room_restart();
        room_goto_previous();
    //}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);

//draw_text(room_width/2,50,"Round: "+string(day_number)+" real_fps: "+string(fps_real));

if (endgame) {
draw_set_font(fnt_title);
var col = make_color_rgb(255, 85, 105);
draw_set_color(col);

var vx = view_xview[0];
var vy = view_yview[0];
var vw = view_wview[0];
var vh = view_hview[0];

//draw_sprite(spr_hench_idle_rd2,0,vw/2,vh/4)
draw_text_transformed(vx+vw*.5,vy+vh*.3,"Henchmen",1,1,0);

draw_set_font(fnt_text)
draw_text(vx+vw*.5,vy+vh*.35,"By: Marcus 'Ahlis' Ahlstr√∂m");
draw_text(vx+vw*.5,vy+vh*.38,"Press &lt;Escape&gt; to return to the menu");
draw_set_color(c_white)
}

if(players_ready != players) {
    draw_set_color(c_red);
    draw_circle(-view_xview[0]+room_width/2,-view_yview[0]+room_height/2,130,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
