<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state_text = "";

used_punch = false;
near_target = noone;
ObjectID = noone;
fadeStep = 1;
friction = 0.2
agility = 2;
image_speed = 0.05;
image_index = 0;
z = 0;
zspd = 0;
last_punched_by = noone;
current_job = noone;
on_fire = false;
fire_counter = 0;
awake = false;

//Can't rotate the body
phy_fixed_rotation=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Being on fire
if(on_fire) {
    repeat(fire_counter*0.1){
        var xx = x+irandom(sprite_width*0.8)-sprite_width*0.4;
        var yy = y+(irandom(sprite_height*0.6)-sprite_height*0.3)-z
        part_particles_create(global.ps2,xx,yy,global.pt_fire,1);
    }
        fire_counter++;
        if(fire_counter &gt;= 80) {
            if(object_get_name(object_index) != "player"){
                state = scr_life_dead;
                image_alpha = 1;
                movement = movement.fall;
                image_speed = 0;
                image_index = image_number-1;
                pal_palette_slot(5, spr_hench_pal );
                held = true;
                if(ObjectID) {
                    with(ObjectID) {instance_destroy();}
                    ObjectID = noone;
                }
                phy_active = false;
                exit;
            } else {
                //if(state != scr_life_punch_new &amp;&amp; state != scr_hench_jump &amp;&amp; state != scr_life_attacked &amp;&amp; state != scr_life_stunned){
                if(!awake) {
                    previous_state = scr_player_movement;
                    on_fire = false;
                    hp = 0;
                    image_index = 0;
                    state = scr_life_attacked;
                } else {
                    fire_counter = 200;
                }
            }
        }
    alarm[7] = 8;
} else {
    fire_counter = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic
//event_inherited();

script_execute(state);

depth = -y-sprite_yoffset;

sprite_index = sprite[movement, face];


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_damage">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Look for punches to be hit with

if (other.owner != id){
    if (state = scr_life_stunned || state = scr_life_attacked){
        exit;
    }
            
    if(state != scr_life_attacked &amp;&amp; state != scr_life_punch_new){
        previous_state = state;
    }
    
    last_punched_by = other.owner;
    var dmg = max(other.pwr - armor,0);
    var dir = point_direction(other.x,other.y,x,y);
    var shock = false;
    
    if(object_get_name(other.object_index) == "shockwave") {
        dmg = 1.4 * dmg / sqrt(distance_to_point(other.x,other.y-sprite_yoffset));
        shock = true;
    }
    
    if(object_get_name(other.object_index) == "obj_fist" &amp;&amp; other.flaming) {
        on_fire = true;
        alarm[7] = 1;
    }
    
    audio_play_sound(snd_hurt,1,false);
    
    pal_palette_slot( 6, spr_hench_pal );
    alarm[11] = 5;
    
    if (dmg &gt; 2 || dmg &gt; hp){
        image_xscale = sign(other.image_xscale);
        state = scr_life_attacked;
        hp -= dmg;
        image_index = 0;
        
        obj_view.shake += 2;
        obj_view.alarm [0] = 10;
        
        physics_apply_impulse(x,y,lengthdir_x(dmg*7,dir),lengthdir_y(dmg*7,dir));
        scr_effect(spr_Star);
        
        var sand = instance_create(x,y,anim_end);
        sand.sprite_index = spr_Sandhit;
        sand.image_speed = 0.25;
        sand.image_xscale = sign(other.image_xscale);
        
        repeat(5+dmg){
            var gibs = instance_create(x,y,obj_gibs);
            gibs.sprite_index = spr_gibs_blood;
            gibs.dir = dir+irandom(30)-15;
            gibs.spd += dmg;
            gibs.zspd /= 1.5;
        }
        
        if (ObjectID){
            if(object_get_name(ObjectID.object_index) == "henchman"){
                //ObjectID.held = true;
                ObjectID.previous_state = ObjectID.state;
                ObjectID.state = scr_life_attacked;
                ObjectID.z = 0;
                image_index = 0;
                with(ObjectID){
                    phy_active = true;
                    alarm[0] = 2*room_speed;
                    physics_apply_impulse(x, y,lengthdir_x(dmg*8,dir+random(16)-8),lengthdir_y(dmg*8,dir+random(16)-8));
                }
                ObjectID = noone;
            }

        }
    }
    else{
        if(dmg &gt; 0){
            hp -= dmg;
            //pal_fx_blink( c_white, 1, 40, 20);
            scr_effect(spr_Glimmer);
            physics_apply_impulse(x,y,lengthdir_x(dmg*10,dir),lengthdir_y(dmg*10,dir));
        }
        else{
            if(!shock){
                scr_effect(spr_Shield);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_solid">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_lifeform">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite[movement, face],image_index,x,y+(sprite_yoffset*1.5)+z*.5,-image_xscale,0.5,180,c_black,0.2*image_alpha);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
