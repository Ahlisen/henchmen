<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Upgr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other_ = noone;
thisday = 0;
used = 0;
image_speed = 0;
width = 2;
height = 2;
box_size = 16;
items = 4;
var odds = 2;
depth = -y+8;
points = 0;
type = -1;
alarm[0] = 1;
statue_x = 25;
goal_x = 25;
cur_play = noone;
col = make_colour_hsv(64,85,230);

costslot = 0;
costslot2 = 0;

//Set all items to zero cost
cost[items] = 0;
total_cost = 0;

name[0] = "Birth";
name[1] = "Defense"
name[2] = "Luck";
name[3] = "Speed"
name[4] = "Might";

/*
for(var i = 0; i&lt;items; i++){
    if(irandom(odds) != odds){
        cost[i] = irandom(2)+0;
    }
    else{
        if(i == 0){
            cost[i] = irandom(3)+1;
        }
    }
    total_cost += cost[i];
}

if(total_cost == 0) {
    cost[res.crystal] = 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move statue

if(statue_x != goal_x) {
    statue_x += sign(goal_x-statue_x)
    alarm[1] = 5;
} else {
    if(goal_x == 25) {
        used = false;
        scr_effect(spr_Glimmer)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set cost of upgrade
randomize();
if(type != 0){
    costslot = irandom(3);
    costslot2 = irandom(3);
    while(costslot2 == costslot) {
        costslot2 = irandom(3);
    }
    cost[costslot] = irandom(5);
    cost[costslot2] = 5-cost[costslot];//irandom(3)+1;
} else {
    for(var i = 0; i&lt;items; i++){
        cost[i]++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!used){
    cur_play = instance_place(x,y,player);
    if (cur_play){
        image_index = 1;
    }
    else{
        image_index = 0;
    }
}
other_ = instance_place(x,y,shockwave);
if (other_ != noone){
    if (!other_.hit &amp;&amp; !used){
    
        var canpay = 0;
        
        for(var i=0; i&lt;items; i++){
            if (other_.myDropoff.resources[i] &gt;= cost[i]){
                canpay++;
            }
        }
        
        if(canpay &gt;= 4){
            for(var j=0; j&lt;items; j++){
                other_.myDropoff.resources[j] -= cost[j];
            }
            other_.myDropoff.newcost = cost;
            other_.myDropoff.payed = 1;
            other_.myDropoff.homing_target = id;
            other_.myDropoff.resources[res.token] += 1;
            
            //send token
            pay = instance_create(x,y,homing_item);
            pay.target = other_.myDropoff;
            pay.sprite_index = spr_Items;
            pay.image_index = res.token;
            
            alarm[1] = room_speed;
            goal_x = 0;
            
            used = 1;
            image_index = 2;
            
            switch(type){
                case 0:
                    /*for (var i = 0; i &lt; instance_number(henchman); i++){
                        var hench = instance_find(henchman,i); //defines the id of current henchman
                        if (hench.team == other_.team) {
                            with(hench){scr_add_rage(1,id);}
                        }
                    }*/
                    new = instance_create(x+25,y,henchman);
                    new.alarm[0] = room_speed*3;
                    new.team = other_.team;
                    new.current_pal = new.team;
                    new.owner = other_.owner;
                    new.myChestID = other_.myDropoff;
                    ds_list_add(other_.myDropoff.henchList, new.id)
                    other_.myDropoff.alarm[11] = 1;
                    other_.owner.minions++;
                    break;
                case 1:
                    for (var i = 0; i &lt; instance_number(henchman); i++){
                        var hench = instance_find(henchman,i); //defines the id of current henchman
                        if (hench.team == other_.team) {
                            var shield = instance_create(x+25,y,homing_item);
                            shield.target = hench;
                            shield.sprite_index = spr_Shield;
                            hench.armor++;
                        }    
                    }
                    other_.owner.armor++;
                    with(other_) {scr_effect(spr_Shield);}
                    break;
                case 2:
                    for (var i = 0; i &lt; instance_number(henchman); i++){
                        var hench = instance_find(henchman,i); //defines the id of current henchman
                        if (hench.team == other_.team) {
                            if(hench.luck &gt; 0){
                                var horse = instance_create(x+25,y,homing_item);
                                horse.target = hench;
                                horse.sprite_index = spr_Luck;
                                hench.luck -= 1; //Lower is better
                            }
                        }    
                    }
                    break;
                case 3:
                    for (var i = 0; i &lt; instance_number(henchman); i++){
                        var hench = instance_find(henchman,i); //defines the id of current henchman
                        if (hench.team == other_.team) {
                            var boots = instance_create(x+25,y,homing_item);
                            boots.target = hench;
                            boots.sprite_index = spr_Boots;
                            hench.norm_movespd += 0.05;
                        }
                    }
                    other_.owner.agility += 0.5;
                    other_.owner.norm_movespd += 0.35;
                    if(!other_.owner.awake){
                        other_.owner.movespd = other_.owner.norm_movespd;
                    } else {
                        other_.owner.movespd += 0.35;
                    }
                    break;
                case 4:
                    for (var i = 0; i &lt; instance_number(henchman); i++){
                        var hench = instance_find(henchman,i); //defines the id of current henchman
                        if (hench.team == other_.team) {
                            if(hench.rage &gt; 0) {
                                hench.rage -= 1; //Lower is better
                                with(hench){scr_effect(spr_Heart);}
                            }
                        }    
                    }
                    other_.owner.norm_pwr++;
                    other_.owner.pwr++;
                    break;
            }
        } else {
            scr_effect(spr_Block);
        }
        
        other_.hit = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 1){
    var sx = x-view_xview[0];
    var sy = y+17-view_yview[0];
    draw_set_colour(c_red);
    draw_text(sx,sy,name[type]);
    draw_set_colour(c_white);
    draw_text(sx,sy-1,name[type]);
    var i = 0;
    for(var yy = 0; yy &lt; height; yy++){
        for(var xx = 0; xx &lt; width; xx++){
            var tx = x+(xx*box_size)-8-view_xview[0];
            var ty = y+(yy*box_size)-48-view_yview[0];
            
            if(cost[i] &gt; 0){
                draw_sprite(spr_Items, i, tx, ty);
                if(cost[i] != 1){
                    
                    draw_set_colour(c_black);
                    draw_text(tx, ty, cost[i]);
                    if(cur_play &amp;&amp; cost[i] &lt;= cur_play.myDropoff.resources[i]) {
                        draw_set_colour(col);
                    } else {
                        draw_set_colour(c_white);
                    }
                    draw_text(tx, ty-1, cost[i]);
                }
            }
            i++;
        }
    }
    //draw_set_colour(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y);
draw_sprite_ext(spr_Statue,type,x+statue_x,y,-image_xscale,0.5,180,c_black,0.2*image_alpha);
draw_sprite(spr_Statue,type,x+statue_x,y);
//draw_sprite(spr_Statue,type,x-25,y);




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
