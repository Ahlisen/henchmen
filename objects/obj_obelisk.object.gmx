<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_obelisk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parent_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var team;
nearest = noone;
hit_by = 0;
reload_time = room_speed*3;
burst_time = 15;
reloading = true;
have_shot = true;
ammo = 3;
maxhp = 6;
hp = maxhp;
armor = 1;
pwr = 4;
owner = noone;
alarm[0] = room_speed;
alarm[2] = reload_time;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reloading
ammo = 3;
reloading = false;
have_shot = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Have_shot
have_shot = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Find targets
/*
targets = ds_list_create();

for(i = 0; i &lt; instance_number(henchman); i++){
    ds_list_add()
}
*/
//nearest = instance_nearest(x,y,parent_lifeform);


var distance = room_width;
nearest = noone;
// Iterate through all enemies
for (var i = 0; i &lt; instance_number(parent_lifeform); i++) {
   var target = instance_find(parent_lifeform,i);
   var dist = distance_to_point(target.x,target.y);
   if (target.team != owner.team &amp;&amp; dist &lt; distance) {
      // Sets the target id and distance
      nearest = target;
      distance = dist
   }
}

alarm[0] = room_speed*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (nearest){
    if distance_to_point(nearest.x,nearest.y) &lt; 100{
    
        if(ammo &gt; 0 &amp;&amp; !have_shot &amp;&amp; !reloading){
            var dir = point_direction(x,y,nearest.x,nearest.y);
            var spd = 6;
            var xdir = lengthdir_x(spd,dir);
            var ydir = lengthdir_y(spd,dir);
        
            fire = instance_create(x,y,fireball);
            
            fire.alarm[0] = room_speed*1.5;
            fire.owner = owner;
            fire.pwr = pwr;
            
            with(fire){
                physics_apply_impulse(x,y,xdir,ydir);
            }
            ammo--;
            if(ammo == 0){
                reloading = true;
                alarm[2] = reload_time;
            }
            else{
                have_shot = true;
                alarm[1] = burst_time;
            }
            
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_damage">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.owner != owner){
    
    var dmg = max(other.pwr-armor,0);
    hp -= dmg;
    if(dmg &gt; 0) {
        scr_effect(spr_Glimmer);
    }
    
    if (hp &lt; 0){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if(nearest){
    draw_line(x,y,nearest.x,nearest.y)
}
draw_text(x,y-24,string(nearest));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,6</point>
    <point>12,6</point>
    <point>12,20</point>
    <point>0,20</point>
  </PhysicsShapePoints>
</object>
